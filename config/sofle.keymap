/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp PAUSE_BREAK       &kp N1  &kp N2            &kp N3       &kp N4          &kp N5                                           &kp N6                 &kp N7           &kp N8       &kp N9             &kp N0            &kp PRINTSCREEN
&kp C_AL_MY_COMPUTER  &kp Q   &kp W             &kp F        &kp P           &kp B                                            &kp J                  &kp L            &kp U        &kp Y              &kp QUESTION      &kp INS
&mt LEFT_WIN ESC      &kp A   &mt LEFT_SHIFT R  &mt LCTRL S  &mt LEFT_ALT T  &kp G                                            &kp M                  &mt RIGHT_ALT N  &mt RCTRL E  &mt RIGHT_SHIFT I  &kp O             &kp RIGHT_WIN
&kp CAPS              &kp Z   &kp X             &kp C        &kp D           &kp V            &kp C_MUTE    &kp K_PLAY_PAUSE  &kp K                  &kp H            &kp COMMA    &kp DOT            &kp SINGLE_QUOTE  &kp DEL
                              &none             &none        &none           &lt 1 BACKSPACE  &lt 3 TAB     &lt 2 ENTER       &mt RIGHT_SHIFT SPACE  &none            &none        &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>;
        };

        layer_1 {
            bindings = <
&kp PAUSE_BREAK       &kp N1     &kp N2               &kp N3           &kp N4             &kp N5                          &kp N6     &kp N7            &kp N8          &kp N9                &kp N0             &kp PRINTSCREEN
&kp C_AL_MY_COMPUTER  &kp TILDE  &kp PIPE             &kp AT           &kp LBKT           &kp RBKT                        &kp LBRC   &kp RBRC          &kp CARET       &kp POUND             &kp EXCL           &kp INS
&mt LEFT_WIN ESC      &kp PRCNT  &mt LEFT_SHIFT FSLH  &mt LCTRL MINUS  &mt LEFT_ALT LPAR  &kp RPAR                        &kp LT     &mt RIGHT_ALT GT  &mt RCTRL PLUS  &mt RIGHT_SHIFT STAR  &kp EQUAL          &kp RIGHT_WIN
&kp SCROLLLOCK        &kp GRAVE  &kp BSLH             &kp UNDER        &kp DLLR           &none     &trans     &trans     &none      &kp AMPS          &kp SEMI        &kp COLON             &kp DOUBLE_QUOTES  &kp DELETE
                                 &trans               &trans           &trans             &trans    &kp TAB    &kp ENTER  &kp SPACE  &trans            &trans          &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F11               &kp F1         &kp F2            &kp F3          &kp F4           &kp F5                                 &kp F6        &kp F7              &kp F8               &kp F9           &kp F10         &kp F12
&kp C_AL_MY_COMPUTER  &kp C_AC_UNDO  &kp C_AC_FORWARD  &mmv MOVE_UP    &mwh SCROLL_UP   &mwh SCROLL_DOWN                       &kp RA(HOME)  &kp RA(LEFT_ARROW)  &kp RA(RIGHT_ARROW)  &kp RC(N)        &kp RC(RS(N))   &kp INS
&mt LEFT_WIN ESC      &kp C_AC_SAVE  &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LA(ESC)                            &kp RG(V)     &kp RIGHT_ALT       &kp RCTRL            &kp RIGHT_SHIFT  &kp RIGHT_WIN   &kp RIGHT_WIN
&kp CAPS              &kp LA(A)      &kp C_AC_CUT      &kp C_AC_COPY   &kp C_AC_PASTE   &mkp MCLK         &trans       &trans  &bt BT_PRV    &bt BT_NXT          &out OUT_TOG         &bt BT_CLR       &bt BT_CLR_ALL  &kp DEL
                                     &trans            &trans          &trans           &mkp LCLK         &mkp RCLK    &trans  &kp SPACE     &trans              &trans               &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F11               &kp F1         &kp F2            &kp F3          &kp F4           &kp F5                                 &kp F6           &kp F7           &kp F8               &kp F9           &kp F10          &kp F12
&kp C_AL_MY_COMPUTER  &kp C_AC_UNDO  &kp C_AC_FORWARD  &kp UP          &mwh SCROLL_UP   &mwh SCROLL_DOWN                       &kp RA(HOME)     &kp RA(LEFT)     &kp RA(RIGHT_ARROW)  &kp RC(N)        &kp RC(RS(N))    &kp INS
&mt LEFT_WIN ESC      &kp C_AC_SAVE  &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp TAB                                &kp RG(V)        &kp RIGHT_ALT    &kp RCTRL            &kp RIGHT_SHIFT  &kp RIGHT_WIN    &kp RIGHT_WIN
&kp SCROLLLOCK        &kp LA(A)      &kp C_AC_CUT      &kp C_AC_COPY   &kp C_AC_PASTE   &kp BACKSPACE     &trans    &trans     &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD      &rgb_ug RGB_SAD  &rgb_ug RGB_TOG  &kp DEL
                                     &trans            &trans          &trans           &kp BACKSPACE     &trans    &kp ENTER  &kp SPACE        &trans           &trans               &trans
            >;
        };
    };
};
